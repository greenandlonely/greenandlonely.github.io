$responsive:            true !default;

$mobile-first:          true !default;

$use-silent-classes:    false !default;

$push:                  false !default;
$pull:                  false !default;

$use-markup-fix:        false !default;

$breakpoints: (
    'palm' '(max-width: 480px)',
    'lap' '(min-width: 481px) and (max-width: 1023px)',
    'portable' '(max-width: 1023px)',
    'desk' '(min-width: 1024px)'
) !default;

$breakpoint-has-widths: ('palm', 'lap', 'portable', 'desk') !default;
$breakpoint-has-push:   ('palm', 'lap', 'portable', 'desk') !default;
$breakpoint-has-pull:   ('palm', 'lap', 'portable', 'desk') !default;


$class-type: if($use-silent-classes, unquote("%"), unquote("."));





@mixin grid-media-query($media-query) {
    $breakpoint-found: false;

    @each $breakpoint in $breakpoints {
        $name: nth($breakpoint, 1);
        $declaration: nth($breakpoint, 2);

        @if $media-query == $name and $declaration {
            $breakpoint-found: true;

            @media only screen and #{$declaration} {
                @content;
            }
        }
    }

    @if not $breakpoint-found {
        @warn "Breakpoint ‘#{$media-query}’ does not exist";
    }
}



%grid,
.grid {
    list-style:none;                /* [1] */
    margin:0;                       /* [2] */
    padding:0;                      /* [2] */
    margin-left:-$gutter;           /* [3] */
    
    @if not $use-markup-fix {
        letter-spacing:-0.31em;
    }
}

@if not $use-markup-fix {
    /* Opera hack */
    .opera:-o-prefocus,
    %grid,
    .grid {
        word-spacing:-0.43em;
    }
}


    %grid__item,
    .grid__item {
        display:inline-block;           /* [1] */
        padding-left:$gutter;           /* [2] */
        vertical-align:top;             /* [3] */
        
        @if $mobile-first {
            width:100%;                 /* [4] */
        }
        -webkit-box-sizing:border-box;  /* [5] */
           -moz-box-sizing:border-box;  /* [5] */
                box-sizing:border-box;  /* [5] */
        
        @if not $use-markup-fix {
            letter-spacing:normal;
            word-spacing:normal;
        }
    }

%grid--rev,
.grid--rev {
    direction:rtl;
    text-align:left;

    > %grid__item,
    > .grid__item {
        direction:ltr;
        text-align:left;
    }
}


%grid--full,
.grid--full {
    margin-left:0;

    > %grid__item,
    > .grid__item {
        padding-left:0;
    }
}


%grid--right,
.grid--right {
    text-align:right;

    > %grid__item,
    > .grid__item {
        text-align:left;
    }
}


/**
 * Centered grids align grid items centrally without needing to use push or pull
 * classes. Extends `.grid`.
 */
%grid--center,
.grid--center {
    text-align:center;

    > %grid__item,
    > .grid__item {
        text-align:left;
    }
}


/**
 * Align grid cells vertically (`.grid--middle` or `.grid--bottom`). Extends
 * `.grid`.
 */
%grid--middle,
.grid--middle {

    > %grid__item,
    > .grid__item {
        vertical-align:middle;
    }
}

%grid--bottom,
.grid--bottom {

    > %grid__item,
    > .grid__item {
        vertical-align:bottom;
    }
}


/**
 * Create grids with narrower gutters. Extends `.grid`.
 */
%grid--narrow,
.grid--narrow {
    margin-left:-($gutter / 2);

    > %grid__item,
    > .grid__item {
        padding-left:$gutter / 2;
    }
}


/**
 * Create grids with wider gutters. Extends `.grid`.
 */
%grid--wide,
.grid--wide {
    margin-left:-($gutter * 2);

    > .grid__item,
    > %grid__item {
        padding-left:$gutter * 2;
    }
}




/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Create our width classes, prefixed by the specified namespace.
 */
@mixin device-type($namespace:"") {
    $prefix: $class-type + $namespace;

    /**
     * Whole
     */
    .desk--one-whole,
    .lap--one-whole,
    .palm--one-whole,
    .one-whole         { width:100%; }


    /**
     * Halves
     */
    .desk--one-whole,
    .lap--one-half,
    .palm--one-half,
    .one-half          { width:50%; }


    /**
     * Thirds
     */
    .one-third,
    .desk--one-third,
    .lap--one-third,
    .palm--one-third         { width:33.333%; }
    
    .two-thirds,
    .desk--two-thirds,
    .lap--two-thirds,
    .palm--two-thirds        { width:66.666%; }


    /**
     * Quarters
     */
    .one-quarter,
    .desk--one-quarter,
    .lap--one-quarter,
    .palm--one-quarter,			{ width:25%; }
    
    .two-quarters,
    .desk--two-quarters,
    .lap--two-quarters,
    .palm--two-quarters      { width: 50%; }
    
    .three-quarters,
    .desk--three-quarters,
    .lap--three-quarters,
    .palm--three-quarters    { width:75%; }

	/*
    .one-fifth,
    .desk--one-fifth,
    .lap--one-fifth,
    .palm--one-fifth         { width:20%; }
    
    #{$prefix}two-fifths        { width:40%; }
    
    #{$prefix}three-fifths      { width:60%; }
    
    #{$prefix}four-fifths       { width:80%; }


    #{$prefix}one-sixth         { width:16.666%; }
    #{$prefix}two-sixths        { @extend #{$prefix}one-third; }
    #{$prefix}three-sixths      { @extend #{$prefix}one-half; }
    #{$prefix}four-sixths       { @extend #{$prefix}two-thirds; }
    #{$prefix}five-sixths       { width:83.333%; }


    #{$prefix}one-eighth        { width:12.5%; }
    #{$prefix}two-eighths       { @extend #{$prefix}one-quarter; }
    #{$prefix}three-eighths     { width:37.5%; }
    #{$prefix}four-eighths      { @extend #{$prefix}one-half; }
    #{$prefix}five-eighths      { width:62.5%; }
    #{$prefix}six-eighths       { @extend #{$prefix}three-quarters; }
    #{$prefix}seven-eighths     { width:87.5%; }


    #{$prefix}one-tenth         { width:10%; }
    #{$prefix}two-tenths        { @extend #{$prefix}one-fifth; }
    #{$prefix}three-tenths      { width:30%; }
    #{$prefix}four-tenths       { @extend #{$prefix}two-fifths; }
    #{$prefix}five-tenths       { @extend #{$prefix}one-half; }
    #{$prefix}six-tenths        { @extend #{$prefix}three-fifths; }
    #{$prefix}seven-tenths      { width:70%; }
    #{$prefix}eight-tenths      { @extend #{$prefix}four-fifths; }
    #{$prefix}nine-tenths       { width:90%; }


    #{$prefix}one-twelfth       { width:8.333%; }
    #{$prefix}two-twelfths      { @extend #{$prefix}one-sixth; }
    #{$prefix}three-twelfths    { @extend #{$prefix}one-quarter; }
    #{$prefix}four-twelfths     { @extend #{$prefix}one-third; }
    #{$prefix}five-twelfths     { width:41.666% }
    #{$prefix}six-twelfths      { @extend #{$prefix}one-half; }
    #{$prefix}seven-twelfths    { width:58.333%; }
    #{$prefix}eight-twelfths    { @extend #{$prefix}two-thirds; }
    #{$prefix}nine-twelfths     { @extend #{$prefix}three-quarters; }
    #{$prefix}ten-twelfths      { @extend #{$prefix}five-sixths; }
    #{$prefix}eleven-twelfths   { width:91.666%; }
    */
}


/**
 * Our regular, non-responsive width classes.
 */
@include device-type;


/**
 * Our responsive classes, if we have enabled them.
 */
@if $responsive {

    @each $name in $breakpoint-has-widths {
        @include grid-media-query($name) {
           @include device-type('#{$name}--');
        }
    }
}
